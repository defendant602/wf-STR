//
// Notes to End Users.
//
// The workflow should run without editing this configuration file,
// however there may be instances in which you wish to edit this
// file for compute performance or other reasons. Please see:
//
//   https://nextflow.io/docs/latest/config.html#configuration
//
// for further help editing this file.


params {
    help = false
    fastq = null
    out_dir = "output"
    samplename = "sample"
    reference_version = "hg38"
    minimap2_addition_para = "-L --MD -Y -a -x map-ont --secondary=no"
    target_STR_region = null
   
    wfversion = "v0.0.1"
    //report_name = "report"
    disable_ping = false

    process_label = "wf-STR"

    //show_hidden_params = false
    //schema_ignore_params = 'show_hidden_params,validate_params,monochrome_logs,aws_queue,aws_image_prefix,wfversion,wf'

    wf {
        example_cmd = [
            "--fastq test_data/reads.fastq.gz"
        ]
    }
}

manifest {
    name            = 'fancylf/wf-STR'
    author          = 'liangf@grandomcis.com'
    homePage        = 'https://github.com/fancylf/wf-STR'
    description     = 'STR workflow'
    mainScript      = 'main.nf'
    nextflowVersion = '>=20.10.0'
    //version       = 'v0.0.1'  
}

executor {
    $local {
        cpus = 4
        memory = "8 GB"
    }
}


// used by default for "standard" (docker) and singularity profiles,
// other profiles may override.
process {
    withLabel:alignment {
        container = "minimap2:latest"
    }
    withLabel:STRdetection {
        container = "grandomics/grandstr:v1.2.9"
    }
    shell = ['/bin/bash', '-euo', 'pipefail']
}


profiles {
    // the "standard" profile is used implicitely by nextflow
    // if no other profile is given on the CLI
    standard {
        docker {
            enabled = true
            // this ensures container is run as host user and group, but
            //    also adds host user to the within-container group
            runOptions = "--user \$(id -u):\$(id -g) --group-add 100"
        }
    }

    // using singularity instead of docker
    singularity {
        singularity {
            enabled = true
            autoMounts = true
        }
    }

    
    // profile using conda environments
    conda {
        docker.enabled = false
        process {
            withLabel:wftemplate {
                conda = "${projectDir}/environment.yaml"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
        conda {
             cacheDir = ""
             useMamba = true
        }
    }

    // Using AWS batch.
    // May need to set aws.region and aws.batch.cliPath
    awsbatch {
        process {
            executor = 'awsbatch'
            queue = "${params.aws_queue}"
            memory = '8G'
            withLabel:wftemplate {
                container = "${params.aws_image_prefix}-wf-template:${params.wfversion}"
            }
            shell = ['/bin/bash', '-euo', 'pipefail']
        }
    }

    // local profile for simplified development testing
    local {
        process.executor = 'local'
    }
}


timeline {
  enabled = true
  file = "${params.out_dir}/execution/timeline.html"
}
report {
  enabled = true
  file = "${params.out_dir}/execution/report.html"
}
trace {
  enabled = true
  file = "${params.out_dir}/execution/trace.txt"
}
dag {
  enabled = true
  file = "${params.out_dir}/execution/pipeline.svg"
}
